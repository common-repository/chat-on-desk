var interval;
$cod  =jQuery;
$cod(document).on(
    "input", ".otp_input",function () {
        enableCodValidateBtn(this);
    }
);

$cod(document).on(
    'keypress', '.otp_input,.otp-number', function (e) {
        if (e.which == 13) { e.preventDefault();
        }
        var maxlength = $cod(this).attr("data-max");
    
        if($cod(this).val().length==maxlength) {
            if(event.which) {
                event.preventDefault();
            }
        }
    }
);


if((typeof cod_otp_settings  != 'undefined' && cod_otp_settings['is_checkout'])  
    && ((typeof cod_otp_settings !=  'undefined' && cod_otp_settings['login_with_otp']) 
    || (typeof cod_otp_settings !=  'undefined' && cod_otp_settings['buyer_login_otp'])) && $cod(".showlogin").parents(".woocommerce").find(".sa-showlogin").length == 0
) {
    $cod(".showlogin").parents(".woocommerce-info").hide();
    var content     = $cod(".showlogin").parents(".woocommerce-info").clone();
    
    var child_div     = $cod(".showlogin").parents(".woocommerce-info").after(content);

    child_div.show();
    child_div.find('.showlogin').addClass("cod-showlogin").removeClass("showlogin");

    $cod(document).on(
        "click",".cod-showlogin",function () {
            if(cod_otp_settings['hide_default_login_form'] == 'on') {
                $cod(".cod-lwo-form").first().toggle();
            }
            else
            {            
                if($cod(this).hasClass("lwo-opened")) {
                    $cod(".cod-lwo-form").hide();
                    $cod(".woocommerce-form-login,.xoo-el-form-container.xoo-el-form-inline").hide();
                    $cod(this).removeClass("lwo-opened");
                }
                else
                {
                    $cod(".woocommerce-form-login,.xoo-el-form-container.xoo-el-form-inline").not('.cod-lwo-form').toggle();
                    $cod(this).addClass("lwo-opened");
                }
            }
        }
    );
}

$cod(document).on(
    "click",".cod_default_login_form,.cod_default_signup_form",function () {
        var parent_cls = $cod(this).attr("data-parentform");
        if($cod(this).parents('.chatondesk-modal').length>0) {
            var id = $cod(this).parents('.chatondesk-modal').attr('id');
            $cod("#"+id+" ."+parent_cls).fadeIn(1000,'linear');
        }
        else{
            $cod("form."+parent_cls).fadeIn(1000,'linear');
        }
        $cod(this).parents("form").attr("style","display:none!important");
        $cod(this).parents("form").find(".phone-valid").val("");
    }
);    

$cod(document).on(
    "click", ".cod_myaccount_btn",function (e) {
        $cod('.codloginwithotp').removeAttr('inert');
        var parentForm =  $cod(this).parents("form");
        if(parentForm.parents('.um-login').length > 0 || parentForm.parents('#tab-customlogin').length > 0 || parentForm.parents('.xoo-el-section-login').length > 0 || parentForm.hasClass('xoo-el-form-login') || parentForm.hasClass('checkoutwc') || parentForm.find('#bp-login-widget-form')) {
            parentForm.addClass('login');
        }
        if(parentForm.parents('#tab-customregister').length > 0 || parentForm.parents('.xoo-el-section-register').length > 0 || parentForm.hasClass('xoo-el-form-register')) {
            parentForm.addClass('register');
        }
        if(parentForm.hasClass('login')) {
            $cod(".codloginwithotp").parents("div").find('.cod_default_login_form').trigger("click");
            parentForm.after($cod(".codloginwithotp").detach());
            parentForm.parents("div").find('.codloginwithotp').not('.codloginwithotp:first').remove();
        }
        if(parentForm.hasClass('register')) {
            parentForm.after($cod(".codsignupwithmobile").detach());
        }
        parentForm.attr("style", "display: none !important");
        parentForm.next().find(".cod-lwo-form").fadeIn(
            200,'linear',function () {
                var mob_field = $cod(this).find('.phone-valid');        
                $cod('html').animate(
                    {scrollTop: mob_field.offset().top-100}, 500, function () {            
                        mob_field.focus();    
                    }
                );    
            }
        );
        parentForm.parent().find(".cod-lwo-form").addClass("lwo-opened");
    }
);

$cod(document).on(
    "click", ".close",function () {
        hideCodOtpModal($cod(this));
    }
);

function hideCodOtpModal(obj)
{
    clearInterval(interval);
    var modal_style = obj.parents().find('.chatondeskModal').attr('data-modal-close');
    obj.parents().find('.chatondeskModal').addClass(modal_style+'Out');
    obj.parents(".chatondeskModal").not('.chatondesk-modal').hide('slow');
    setTimeout(
        function () {
            $cod('.chatondeskModal').removeClass(modal_style+'Out');
        }, 500
    );
}

let codGroup = function (ele) {
    ele.value = ele.value.replace(/[^0-9]/g,'');
    var cur_class = ele.className;
    var maxlength = $cod('.'+cur_class).attr("data-max");
    var next_input = ele.id.slice(6);
    if(ele.value.length > maxlength) {
        var cur_val = ele.value.slice(0, 1);
        $cod("."+cur_class).val(cur_val);
    }
}

let codtabChange = function (val,modal_id) {
    var modal_form_class = modal_id.parentElement.parentElement.parentElement.parentElement.getAttributeNode("data-form-id").value;

    let ele = '';
    if(modal_form_class == "" ) {
        ele = document.querySelectorAll('.digit-group input');
    } else {
        ele = document.querySelectorAll('.'+modal_form_class+' .digit-group input');
    }
    
    if(ele[val-1].value != '') {
        ele[val].focus();
    }else if(ele[val-1].value == '' && event.currentTarget.id != 'digit-1') {
        ele[val-2].focus();
    }     
}


$cod(document).on(
    "keyup",".chatondeskModal .otp-number",function (e) {
        var otp_length     = $cod('#chatondesk_customer_validation_otp_token').attr('data-max');
        var txtData     = [];
        var parent         = $cod(this).parents(".chatondeskModal");
        parent.find(".otp-number").each(
            function () {
                var otp_number = $cod(this).val();
                txtData.push(otp_number);
            }
        );
        parent.find(".otp_input").val(txtData.join(""));
        enableCodValidateBtn(parent.find(".otp_input"),otp_length);
        e.preventDefault();
        if(e.key === "Delete" && e.target.selectionStart==0) {
            var item         = $cod(this);    
            item.val(item.next('.otp-number').val());
            item.nextAll(".otp-number").each(
                function () {
                    item[0].setSelectionRange(0,0);
                    $cod(this).val($cod(this).next('.otp-number').val());
                }
            );
            e.preventDefault();
        }
        if(e.key === "ArrowLeft" || e.key === "Backspace") {
            $cod(this).prev('.otp-number').focus();
        }
        if(e.key === "ArrowRight") {
            $cod(this).next('.otp-number').focus();
        } 
    }
);


$cod(window).ready(
    function () {
        $cod(".cod_myaccount_btn").closest("form").find('#rememberme').closest('label').each(
            function () {
                var form = $cod(this).closest('form');
                form.find('.woocommerce-LostPassword').prepend($cod(this));
            }
        );
        if(cod_otp_settings['hide_default_login_form'] == 'on') {
            if($cod(".cod_myaccount_btn[name=cod_myaccount_btn_login]").parents().find('.woocommerce-form-login-toggle').length==0) {
                $cod(".cod_myaccount_btn[name=cod_myaccount_btn_login]").trigger("click");
            }
            else{
                $cod(".woocommerce-form-login-toggle").next().find('.cod_myaccount_btn[name=cod_myaccount_btn_login]').trigger("click");
            }
            setTimeout(
                function () {
                    $cod(".cod-showlogin").trigger("click")}, 10
            );
            $cod(".cod_default_login_form").hide();
            $cod(".cod_loginwithotp-form").show();
        }    
    }
);

function pasteCodOtp(otp)
{
    var maxlength = $cod(".otp_input").attr("data-max");
    otp_field = $cod(".otp-number");
    var sc = [...otp];
    otp_field.val(i => sc[i]).eq(maxlength-1).focus();
    $cod(".otp-number").trigger('keyup');
}

function getCodCountryByCode(code)
{
    return window.intlTelInputGlobals.getCountryData().filter(
        function (data) {
            return (data.dialCode == code) ? data.iso2 : ''; }
    );
}

function enableCodValidateBtn(obj,otp_length=0)
{
    if($cod(obj).val().match(/^\d{4,8}$/)) {
        $cod("#cod_verify_otp,obj").removeAttr("style");
        $cod("#cod_verify_otp,obj").removeAttr("disabled");    
    }
    else
    {
        $cod("#cod_verify_otp,obj").css({"color":"grey","pointer-events":"none"});
    }
}

function codResendOTP(obj)
{
    $cod(".cod-otp-initiated .cod-otp-btn-init").trigger("click");
    return false;
}

function cod_otp_timer(obj,otp_timer=15)
{
    initialiseCodAutoFillOtp();
    var timer = function (secs) {
        var sec_num = parseInt(secs, 10)    
        var hours   = Math.floor(sec_num / 3600) % 24
        var minutes = Math.floor(sec_num / 60) % 60
        var seconds = sec_num % 60    
        hours = hours < 10 ? "0" + hours : hours;
        minutes = minutes < 10 ? "0" + minutes : minutes;
        seconds = seconds < 10 ? "0" + seconds : seconds;
        return [hours,minutes,seconds].join(":")
    };
    obj.find(".cod_timer").show();
    obj.find(".satimer").html(timer(otp_timer));
    obj.find(".cod_forgot").hide();
	obj.find(".cod_resend_btn").addClass("anchordisabled");
    var counter = otp_timer;
    interval = setInterval(
        function () {
            counter--;
            var places = (counter < 10 ? "0" : "");
            obj.find(".satimer").html(timer(counter));
            if (counter == 0) {
                   counterRunning=false;
                   obj.find(".cod_timer").hide();
                   obj.find(".cod_forgot").show();  
				   obj.find(".cod_resend_btn").removeClass("anchordisabled");
				   obj.find(".cod_resend_btn").css("cursor","pointer");
                   clearInterval(interval);
            }
        }, 1000
    );
}

function codInitOTPProcess(obj,action_url, data_obj,otp_resend_timer=15,success_cb=null,failure_cb=null,submit_selector=null)
{
    var waiting_txt     = (typeof cod_notices !=  'undefined' && cod_notices['waiting_txt']) ? cod_notices['waiting_txt'] : "Please Wait...";            
    var cur_btn            = $cod(obj);
    var prev_btn_text     = cur_btn.val();
    var currentModel     = $cod(".modal.chatondeskModal");
    currentModel.find(".ring").removeClass('cod-hide');    
    currentModel.find(".modal-content").css('transform', 'scale(0)');
    currentModel.show();
    action_url         = (typeof cod_otp_settings['lang'] !=  'undefined' && cod_otp_settings['lang']!='') ? action_url+"&lang="+cod_otp_settings['lang'] : action_url;
    if(cur_btn.is("input")) {
        cur_btn.val(waiting_txt).attr("disabled",true);
        
    }else{
        cur_btn.addClass('button--loading').attr("disabled",true);
    }
    $cod('form').removeClass('cod-otp-initiated');
    $cod.ajax(
        {
            url:action_url+'&channel='+$cod('#cod_channel').val(),
            type:"POST",
            data:data_obj,
            cache: false,
            crossDomain:!0,
            dataType:"json",
            success:function (o) {
                if("failure"==o.result || false==o.success) {
                    showCODError(o,cur_btn,failure_cb,prev_btn_text);
                    return false;
                }
                showCODModal(o,cur_btn,submit_selector,prev_btn_text,success_cb,otp_resend_timer);
            },
            error:function (o,e,m) {
                showCODError(o,cur_btn,failure_cb,prev_btn_text);
            }
        }
    );           
    return false;
}

function showCODModal(o,cur_btn,submit_selector,prev_btn_text,success_cb,otp_resend_timer)
{
    $cod('[tabindex="-1"]').removeAttr('tabindex');
    var currentModel     = $cod(".modal.chatondeskModal");
    ("success"==o.result)?(
    (cur_btn.is("input") ? cur_btn.val(prev_btn_text).attr("disabled",false) : cur_btn.removeClass('button--loading').attr("disabled",false)),
    cur_btn.parents("form").addClass('cod-otp-initiated'),
    currentModel.find(".cod-message").empty().removeClass("woocommerce-error").append(o.message).addClass("woocommerce-message"),
    //currentModel.show(),
    currentModel.find(".otp_input,.otp-number").val(""),
    currentModel.find(".otp_input,.otp-number:visible:first").focus(),
    currentModel.find(".otp_input,.otp-number").off().on(
        "keypress", function (event) {
            if (event.which === 13) {
                event.preventDefault();
                validateCodOtp({data:{btn_class: submit_selector}});        
            }       
        }
    ),
    $cod("#cod_verify_otp").off().on("click",{btn_class: submit_selector}, validateCodOtp),
    currentModel.find(".chatondesk_validate_field").show(),
    cod_otp_timer(currentModel,otp_resend_timer),
    ((typeof success_cb == "function") ? success_cb(o) : "" )
    ):
    (
    currentModel.find(".chatondesk_validate_field").hide(),
    currentModel.find(".cod-message").empty().removeClass("woocommerce-message").append(o.message).addClass("woocommerce-error"),
    //currentModel.show(),
    (cur_btn.is("input") ? cur_btn.val(prev_btn_text).attr("disabled",false) : cur_btn.removeClass('button--loading').attr("disabled",false))
    );
    currentModel.find(".ring").addClass('cod-hide');    
    currentModel.find(".modal-content").css('transform', 'scale(1)');var otp_field = $cod(".otp-number");
    otp_field.on(
        'paste',function (ev) { 
            var clip = ev.originalEvent.clipboardData.getData('text').trim();
            pasteCodOtp(clip);     
            return ev.preventDefault();
        }
    );        
    return false;
}

function showCODError(o,cur_btn,failure_cb,prev_btn_text)
{
    var currentModel     = $cod(".modal.chatondeskModal");
    cur_btn.val(prev_btn_text).attr("disabled",false);
    cur_btn.removeClass('check').attr("disabled",false);
    cur_btn.removeClass('button--loading').attr("disabled",false);
    (typeof failure_cb == "function") ? failure_cb(o) : "" ;
    currentModel.find(".ring").addClass('cod-hide');    
    currentModel.hide();
}

function cod_validateOTP(obj,action_url,data_obj,callback)
{
    var current_btn = $cod('#cod_verify_otp');
    var current_modal = $cod(".modal.chatondeskModal");
    current_modal.find(".ring").removeClass('cod-hide');    
    current_modal.find(".modal-content").css('transform', 'scale(0)');
    action_url         = (typeof cod_otp_settings['lang'] !=  'undefined' && cod_otp_settings['lang']!='') ? action_url+"&lang="+cod_otp_settings['lang'] : action_url;    

    $cod.ajax(
        {
            url:action_url,
            type:"POST",
            data:data_obj,
            crossDomain:!0,
            dataType:"json",
            beforeSend: function ( xhr ) {
                current_modal.find(".cod-message").empty().addClass("woocommerce-message");
                if(current_btn.is("input")) {
                    current_btn.attr("disabled",true);
            
                }else{
                    current_btn.addClass('button--loading').attr("disabled",true);
                }
            },
            success:function (o) {
                codotpSuceess(o,current_btn,callback);
            },
            error:function (o,e,m) {
                alert("error found here");
            }
        }
    );
}

function codotpSuceess(o,current_btn,callback)
{
    var current_modal = $cod(".modal.chatondeskModal");
    current_modal.find(".ring").addClass('cod-hide');
    current_modal.find('.modal-content').css({'transform': 'scale(1)','transition': 'all 0.5s'});
    ("success"==o.result && o.message==cod_otp_settings['valid_otp'])?
    (
	current_modal.find(".chatondesk_validate_field").hide(),
    current_btn.removeClass("button--loading"),
    current_modal.find(".cod-message").show().empty().addClass("woocommerce-message").append(o.message).removeClass("woocommerce-error"),
    //current_modal.hide(),
    setTimeout(
        function () {
            hideCodOtpModal(current_btn);
        }, 1500
    ),
    ((typeof callback == "function") ? callback() : "" )
    ):
    (
    current_btn.attr("disabled",false),
    current_btn.removeClass("button--loading"),
    current_modal.find(".cod-message").show().empty().addClass("woocommerce-error").append(o.message).removeClass("woocommerce-message"),
    current_modal.find(".otp_input").focus());
}

function add_chatondesk_button(submit_selector,phone_selector,unique_id,button_text='')
{
	if(!$cod(submit_selector).hasClass("cod-default-btn-hide") && ($cod(phone_selector).attr('type') !== 'hidden' || $cod(phone_selector).parents("form").hasClass('woocommerce-post-checkout-form'))) {
        $cod(phone_selector).parents("form").addClass("sas-form");
        var button = $cod(submit_selector);
		if(!button.hasClass("sa-default-btn-hide"))
		{
          button.addClass("cod-default-btn-hide");
		}
        $cod(button.first().clone()).insertAfter(button.first()).addClass("cod-otp-btn-init chatondesk_otp_btn_submit");
        $cod(submit_selector+".cod-otp-btn-init").attr("id","cod_verify_"+unique_id).attr("name","cod_verify_"+unique_id).removeAttr('onclick').removeAttr('onkeypress');
    
        $cod(".cod-otp-btn-init").removeClass("sa-default-btn-hide cod-default-btn-hide");
        $cod(phone_selector).addClass("phone-valid");
        if($cod(submit_selector).is("button")) {
            var text = (button_text!='')?button_text:$cod(submit_selector+".cod-default-btn-hide").text();
            $cod("#cod_verify_"+unique_id).html("<span class=button__text>"+ text+"</span>");
        }
    }
}

function send_cod_otp(obj,submit_selector,phone_selector,username_selector,password_selector)
{
    $cod(obj).parents(".chatondeskModal").hide();
    var country_enable = cod_otp_settings['show_countrycode'];
    var site_url = cod_otp_settings['site_url'];
    var otp_resend_timer = cod_otp_settings['otp_time'];
    if ("on" !== country_enable ) {
        var e = $cod(obj).parents("form").find(phone_selector).val();
    } else {
        var e = $cod(obj).parents("form").find(phone_selector).intlTelInput("getNumber");
    }
    var u     = $cod(obj).parents("form").find(username_selector).val();
    var p            = $cod(obj).parents("form").find(password_selector).val();
    if(typeof u !== "undefined" && typeof p !== "undefined") {
        var data     = {username:u,password:p};
    }
    else
    {
        var data     = {user_phone:e};
    }
    $cod(obj).parents("form").find("[aria-required=true], [required],.ff-el-is-required,.validate-required,.wpcf7-validates-as-required").not(".otp_input").each(
        function () {
            $cod(this).removeClass("cod_field_error");
            if($cod(this).is(":hidden")) {
                return true;
            }
        
            if(($cod(this).attr("aria-required") || $cod(this).attr("required")) && ($cod(this).val() === "") && $cod(this).attr("type") != 'file') {
                $cod(this).addClass("cod_field_error");
            }
        
            if($cod(this).attr("type") === "radio" || $cod(this).attr("type") === "checkbox") {
                if($cod(this).attr("name") != undefined && !$cod("[name='"+$cod(this).attr("name")+"']").is(":checked")) {
                    $cod(this).addClass("cod_field_error");
                }
                else if($cod(this).attr("id") != undefined && !$cod("#"+$cod(this).attr("id")).is(":checked") && $cod(this).attr("name") == undefined) {
                    $cod(this).addClass("cod_field_error");
                }
            }
        
            if(($cod(this).find("input").attr("type") === "radio" || $cod(this).find("input").attr("type") === "checkbox")) {
                if(!$cod("[name='"+$cod(this).find("input").attr("name")+"']").is(":checked")) {
                    $cod(this).addClass("cod_field_error");
                }
            }
        
            if($cod(this).hasClass("ff-el-is-required") && ($cod(this).next().find("input").attr("type") === "radio" || $cod(this).next().find("input").attr("type") === "checkbox")) {
                if(!$cod("[name='"+$cod(this).next().find("input").attr("name")+"']").is(":checked")) {
                    $cod(this).addClass("cod_field_error");
                }
            }

            if($cod(this).hasClass("ff-el-is-required") && $cod(this).next().find("input,select").val() === "") {
                if($cod(this).next().find("input").attr("type") === "file") {
                    if($cod(this).next().find(".ff-uploaded-list").find(".ff-upload-preview[data-src]").length == 0) {
                        $cod(this).addClass("cod_field_error");
                    }              
                }
                else
                {
                    $cod(this).addClass("cod_field_error");
                }
            }
            if($cod(this).hasClass("validate-required") && $cod(this).find("input,select").val() === "") {
                $cod(this).addClass("cod_field_error");
            }          
        
            if(!$cod(this).hasClass("cod_field_error") && $cod(this).attr("minlength")) {

                var char_length = $cod(this).val().length;

                if(char_length < $cod(this).attr("minlength")) {
                    $cod(this).addClass("cod_field_error");
                }
            }

            if(!$cod(this).hasClass("cod_field_error") && $cod(this).attr("maxlength")) {

                var char_length = $cod(this).val().length;

                if(char_length > $cod(this).attr("maxlength")) {
                    $cod(this).addClass("cod_field_error");
                }
            }
        }
    );
    if($cod(obj).parents("form").find(".cod_field_error").length === 0) {
        if(username_selector !="" && password_selector !="") {
            var action_url     = site_url+"/?option=chatondesk_ajax_login_popup";
        }
        else if($cod(obj).parents("form").hasClass("cod_loginwithotp-form")) {
            data = $cod(obj).parents("form").serialize();
            action_url     = site_url+"/?option=chatondesk_ajax_login_with_otp";
        }
        else if($cod(obj).parents("form").hasClass("cod-signupwithotp-form")) {
            data = $cod(obj).parents("form").serialize();
            action_url     = site_url+"/?option=chatondesk-registration-with-mobile";
        }
        else if($cod(obj).parents("form").hasClass("woocommerce-checkout")) {
            var cartflow_param = '';
            if(typeof cartflows  != 'undefined') {
                cartflow_param = '&wcf_checkout_id='+cartflows['control_step'];
            }
            data = $cod(obj).parents("form").serialize()+"&checkout=Checkout";
            action_url     = site_url+"/?option=chatondesk-woocommerce-checkout-process&wc-ajax=checkout"+cartflow_param;
        }
        else if($cod(obj).parents("form").hasClass("woocommerce-post-checkout-form")) {
            action_url     = site_url+"/?option=chatondesk-woocommerce-post-checkout";
        }
        else if($cod(obj).parents("form").hasClass("register") || $cod(obj).parents("form").hasClass("pie_register_reg_form") || $cod(obj).parents("form").hasClass("uwp-registration-form") || $cod(obj).parents().find(".um-register").length > 0) {
            data = $cod(obj).parents("form").serialize()+"&register=Register";
            action_url     = site_url+"/?option=chatondesk_register_with_otp";
        }
        else if($cod(obj).parents("form").hasClass("elementor-form")) {
            data = $cod(obj).parents("form").serialize()+"&action=elementor_pro_forms_send_form";;
            action_url     = cod_otp_settings['ajax_url']+"/?option=chatondesk_elementor_form_otp";
        }
		else if($cod(obj).parents("form").hasClass("wpcf7-form")) {
			             data = $cod(obj).parents("form").serialize();
            action_url     = site_url+"/?option=chatondesk_wpcf7_form_otp";
        }
		else if($cod(obj).parents("form").hasClass("frm-show-form")) {
			if ( $cod(".frm-show-form").attr( "data-token" ) && 0 === $cod(".frm-show-form [name='antispam_token']").length ) {
				antispamInput = document.createElement( 'input' );
				antispamInput.type = 'hidden';
				antispamInput.name = 'antispam_token';
				antispamInput.value = $cod(".frm-show-form").attr( 'data-token' );
				$cod('.frm-show-form').append( antispamInput );
			}
            data = $cod(obj).parents("form").serialize();
            action_url     = site_url+"/?option=chatondesk_frm_show_form_otp";
        }
        else{
            action_url     = site_url+"/?option=chatondesk-shortcode-ajax-verify";
        }
		
        if($cod(obj).parents("form").hasClass("wpforms-form")) 
		{
			var submitsAWpForm = function() {
				if ($cod(".wpforms-form").attr('data-token').length > 0 ) {
				  $cod( '<input type="hidden" class="wpforms-token" name="wpforms[token]" />' ).val( $cod(".wpforms-form").attr('data-token') ).appendTo( $cod(".wpforms-form") );
				}
				
				data = $cod(obj).parents("form").serialize();
				action_url     = site_url+"/?option=chatondesk_wpforms_otp";
				codInitOTPProcess(
				obj,action_url, data,otp_resend_timer,function (resp){},function () {
					$cod(obj).parents("form").find(".cod-default-btn-hide").not(".cod-otp-btn-init").trigger("click")},submit_selector
				 );
				 return false;
			};
			if ( typeof wpformsRecaptchaV3Execute === 'function' ) {
				return wpformsRecaptchaV3Execute( submitsAWpForm );
			}
			else{
				submitsAWpForm();
			}
        }
		else{
			codInitOTPProcess(
            obj,action_url, data,otp_resend_timer,function (resp){},function () {
                $cod(obj).parents("form").find(".cod-default-btn-hide").not(".cod-otp-btn-init").trigger("click")},submit_selector
             );
             return false;
		}
    }
    else
    {
        //$cod(obj).parents("form").find(".cod-default-btn-hide").not(".cod-otp-btn-init").trigger("click");
        clickCodFormButton($cod(obj).parents("form").find(".cod-default-btn-hide").not(".cod-otp-btn-init")[0]);
        setTimeout(
            function () {
                $cod(".wc-block-components-checkout-place-order-button").not(".cod-otp-btn-init").addClass("cod-default-btn-hide")}, 10
        );
        return false;
    }
}
function clickCodFormButton(elem)
{
    elem.classList.remove("cod-default-btn-hide");
    var evt = document.createEvent("MouseEvents");
    evt.initMouseEvent(
        "click", true, true, window,
        0, 0, 0, 0, 0, false, false, false, false, 0, null
    );
    if (document.createEvent) {
        elem.dispatchEvent(evt);
    } else {
        elem.fireEvent("on" + evt.eventType, evt); // support for IE crap
    }
    elem.classList.add("cod-default-btn-hide");
}
function validateCodOtp(event)
{
    var site_url = cod_otp_settings['site_url'];
    var submit_selector = event.data.btn_class;
    var c_form     = $cod(".cod-otp-initiated");
    var otp = $cod("#chatondesk_customer_validation_otp_token").val();
    var action_url         = site_url+"/?option=chatondesk-validate-otp-form&channel="+$cod('#cod_channel').val();
    var data             = c_form.serialize()+"&otp_type=phone&from_both=&chatondesk_customer_validation_otp_token="+otp;
    cod_validateOTP(
        submit_selector,action_url,data,function () {
            //$cod(submit_selector).hasClass("cod-default-btn-hide")?c_form.find(".cod-default-btn-hide").not(".cod-otp-btn-init").trigger("click"):$cod("#order_verify").val(otp);
            $cod("body").off("submit");
            $cod(submit_selector).hasClass("cod-default-btn-hide")?clickCodFormButton(c_form.find(".cod-default-btn-hide").not(".cod-otp-btn-init")[0]):$cod("#order_verify").val(otp);
        
        }
    );
}

function initialiseCodCountrySelector(phoneSelector='.phone-valid')
{
    var country_enable = cod_otp_settings['show_countrycode'];
    if ("on" !== country_enable ) {
        return;
    }
    var default_cc = (typeof cod_country_settings !="undefined" && cod_country_settings["cod_default_countrycode"] && cod_country_settings["cod_default_countrycode"]!="") ? cod_country_settings["cod_default_countrycode"] : "";
    var show_default_cc = "";
    var mob_field = $cod(phoneSelector);
    mob_field.addClass("phone-valid");
    mob_field.intlTelInput("destroy");
    var mob_field_name = mob_field.attr("name");
    var object = $cod(this).saIntellinput({hiddenInput:false});
    var iti = mob_field.intlTelInput(object);
    mob_field.parents(".iti--separate-dial-code").append('<input type="hidden" name="'+mob_field_name+'">');
    if(default_cc!="") {
        var selected_cc = getCodCountryByCode(default_cc);
        var show_default_cc = selected_cc[0].iso2.toUpperCase();
        iti.intlTelInput("setCountry",show_default_cc);
    }
    $cod(phoneSelector).on(
        "countrychange", function () {
            var default_cc = $cod(this).intlTelInput("getSelectedCountryData");
            var fullnumber =  $cod(this).intlTelInput("getNumber");
            var field_name = $cod(this).attr("name");
            $cod(this).parents("form").find('[name="'+field_name+'"]:hidden').val(fullnumber);
        }
    );
}

if ('OTPCredential' in window) {
    window.addEventListener(
        'DOMContentLoaded', e => {
            const input = document.querySelector('#chatondesk_customer_validation_otp_token');
            const ac = new AbortController();
            setTimeout(
            () => {
                    ac.abort();
            }, 1 * 60 * 1000
        );
        if (!input) { return;
        }
        initialiseCodAutoFillOtp();
        }
    );
}

function initialiseCodAutoFillOtp()
{
    try {
        navigator.credentials.get(
            {
                otp: { transport:['sms'] }
            }
        ).then(
            otp => {
            if($cod(".otp-number").hasClass('hide')) {
                $cod("#chatondesk_customer_validation_otp_token").val(otp.code);  
            }          
            else{
                pasteCodOtp(otp.code);  
            }
            $cod("#cod_verify_otp").trigger('click');
            }
        ).catch(
            err => {
            //console.log(err);
            }
        );
    }
    catch(err) {
    }
}

function codRecaptcha()
{
	var recaptcha_div = $cod(".frm-show-form .frm_button_submit").parents("form").find("[data-sitekey]");
	if(recaptcha_div.length>0 && recaptcha_div.attr("data-size") == "invisible")
	{
	  recaptcha_div.removeClass("frm-g-recaptcha").addClass("g-recaptcha").attr("id","cod-grecaptcha").html("");        
	  var site_key = recaptcha_div.attr("data-sitekey");
	  grecaptcha.ready(function() {  
			grecaptcha.render("cod-grecaptcha", {
					"sitekey" : site_key
			});
			grecaptcha.execute();
	  });          
    }
}

$cod('.sel_sendotp').change(function(){
	var channel=$cod(this).val();
	if(channel!='')
	{
		var def_channel = $cod('#cod_channel').val();
		$cod('#cod_channel').val(channel);
		$cod(this).find("option:selected").text(def_channel);
		$cod(this).find("option:selected").val(def_channel);
		$cod(this).find('option:eq(0)').prop('selected', true);
		//codResendOTP(this);
	}
});

$cod(document).on(
    "click", ".sendotp",function () {
        var channel = $cod(this).attr('channel');
		var def_channel = $cod('#cod_channel').val();
		$cod(this).attr('channel',def_channel);
		$cod(this).text('Send Via '+def_channel);
		$cod('#cod_channel').val(channel);
		codResendOTP(this);
    }
);